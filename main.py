import time

import telebot

from database import *
from insert_audio import *
from telebot import types
from config import Config
from summatization import summarization_text
from interact_yadisk import get_video, video_to_audio, get_all_files

token = Config.token_telegram
admin_id = Config.admin_id
bot = telebot.TeleBot(token)

dir_name = Config.dir_name

conn = get_db_connection()
cur = conn.cursor()

cur.execute('''
CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY,
    user_id INTEGER,
    send_question INTEGER
)
''')
conn.commit()
conn.close()


@bot.message_handler(commands=['start'])
def send_welcome(message):
    add_user(message.chat.id)
    markup = menu_button()

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¢–û–£–¢! –ù–µ –º–æ–∂–µ—Ç–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –¥–æ–º–∞—à–∫–æ–π –∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤—Ä–µ–º—è? "
                     "–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ —É—á–∏—Ç—å—Å—è –ª–µ–≥–∫–æ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ",
                     reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "create_note":
        bot.answer_callback_query(call.id, text="–ñ–¥—É –≤–∞—à –≤—ã–±–æ—Ä...")
        markup = types.InlineKeyboardMarkup()

        btn1 = types.InlineKeyboardButton(text="–°–æ–∫—Ä–∞—Ç–∏—Ç—å —Ç–µ–∫—Å—Ç üñä", callback_data="start_create_note")
        btn2 = types.InlineKeyboardButton(text="–ì–æ–ª–æ—Å–æ–≤–æ–µ üéô", callback_data="voice_note")
        btn4 = types.InlineKeyboardButton(text="–Ø–Ω–¥–µ–∫—Å –¥–∏—Å–∫ üíæ", callback_data="ya_disk_note")

        markup.add(btn1, btn2)
        markup.add(btn4)
        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ —Ñ–æ—Ä–º–∞—Ç", reply_markup=markup)

    elif call.data == "start_create_note":
        create_notes(call.message)

    elif call.data == "ya_disk_note":
        ya_disk_create_notes(call.message)


@bot.message_handler()
def send_question(message):
    if len(message.text) > 50 and get_send_question(message.chat.id):
        markup = menu_button()

        bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)

        summary = summarization_text(message.text)
        bot.send_message(message.chat.id, f"–í–æ—Ç –≤–∞—à —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:")
        bot.send_message(message.chat.id, f"{summary}", reply_markup=markup)

        set_send_question(message.chat.id, 0)


def create_notes(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å...")
    set_send_question(message.chat.id, 1)


def ya_disk_create_notes(message):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —è–Ω–¥–µ–∫—Å –¥–∏—Å–∫–æ–º –∏ —Å–æ–∑–¥–∞–Ω–∏—é –∫–æ–Ω—Å–ø–µ–∫—Ç–∞ –ø–æ –≤–∏–¥–µ–æ"""
    if message.chat.id == admin_id:
        markup = menu_button()
        all_files = get_all_files(dir_name)
        downloaded_files = get_video(dir_name, all_files)
        video_to_audio(downloaded_files)

        convert_to_wav("audio_files/file1.mp3")
        text = audio_to_text("audio_files/file1.wav")

        text = summarization_text(text)

        bot.send_message(message.chat.id, "–í–æ—Ç –≤–∞—à —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç")
        bot.send_message(message.chat.id, text, reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–ö–∞–∂–µ—Ç—Å—è —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —è–Ω–¥–µ–∫—Å –¥–∏—Å–∫—É, –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–º—É –∫ —ç—Ç–æ–º—É –±–æ—Ç—É. –î–ª—è "
                                          "–¥–æ—Å—Ç—É–ø–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @thealfit")


def menu_button():
    markup = types.InlineKeyboardMarkup()

    btn1 = types.InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Å–ø–µ–∫—Ç üìù", callback_data="create_note")
    btn3 = types.InlineKeyboardButton(text="–ö–∞—Ä—Ç–æ—á–∫–∏ üìÅ", callback_data="cards")
    btn4 = types.InlineKeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å üë§", callback_data="profile")

    markup.add(btn3, btn4)
    markup.add(btn1)
    return markup

bot.polling(none_stop=True)
#while True:
#    try:
#        # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –æ—à–∏–±–∫–∏
#        bot.polling(none_stop=True)
#    except Exception as e:
#        print(f"–û—à–∏–±–∫–∞: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
#        time.sleep(5)
